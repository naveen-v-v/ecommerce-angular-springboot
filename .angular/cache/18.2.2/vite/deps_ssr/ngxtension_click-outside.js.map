{
  "version": 3,
  "sources": ["../../../../../node_modules/ngxtension/fesm2022/ngxtension-assert-injector.mjs", "../../../../../node_modules/ngxtension/fesm2022/ngxtension-create-injection-token.mjs", "../../../../../node_modules/ngxtension/fesm2022/ngxtension-inject-destroy.mjs", "../../../../../node_modules/ngxtension/fesm2022/ngxtension-click-outside.mjs"],
  "sourcesContent": ["import { assertInInjectionContext, inject, Injector, runInInjectionContext } from '@angular/core';\nfunction assertInjector(fn, injector, runner) {\n  !injector && assertInInjectionContext(fn);\n  const assertedInjector = injector ?? inject(Injector);\n  if (!runner) return assertedInjector;\n  return runInInjectionContext(assertedInjector, runner);\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { assertInjector };\n", "import { runInInjectionContext, inject, InjectionToken, ENVIRONMENT_INITIALIZER } from '@angular/core';\nimport { assertInjector } from 'ngxtension/assert-injector';\nfunction createInjectFn(token) {\n  return function ({\n    injector,\n    ...injectOptions\n  } = {}) {\n    injector = assertInjector(this, injector);\n    return runInInjectionContext(injector, () => inject(token, injectOptions));\n  };\n}\nfunction createProvideFn(token, factory, opts = {}) {\n  const {\n    deps = [],\n    multi = false,\n    extraProviders = [],\n    isFunctionValue: isFunctionValueFromOpts = false\n  } = opts;\n  return (value, isFunctionValue = isFunctionValueFromOpts) => {\n    let provider;\n    if (typeof value !== 'undefined') {\n      // TODO: (chau) maybe this can be made better\n      const factory = typeof value === 'function' ? isFunctionValue ? () => value : value : () => value;\n      provider = {\n        provide: token,\n        useFactory: factory,\n        multi\n      };\n    } else {\n      provider = {\n        provide: token,\n        useFactory: factory,\n        deps: deps,\n        multi\n      };\n    }\n    return [extraProviders, provider];\n  };\n}\n/**\n * `createInjectionToken` accepts a factory function and returns a tuple of `injectFn`, `provideFn`, and the `InjectionToken`\n * that the factory function is for.\n *\n * @param {Function} factory - Factory Function that returns the value for the `InjectionToken`\n * @param {CreateInjectionTokenOptions} options - object to control how the `InjectionToken` behaves\n * @returns {CreateInjectionTokenReturn}\n *\n * @example\n * ```ts\n * const [injectCounter, provideCounter, COUNTER] = createInjectionToken(() => signal(0));\n *\n * export class Counter {\n *  counter = injectCounter(); // WritableSignal<number>\n * }\n * ```\n */\nfunction createInjectionToken(factory, options) {\n  const tokenName = factory.name || factory.toString();\n  const opts = options ?? {\n    isRoot: true\n  };\n  opts.isRoot ??= true;\n  // NOTE: multi tokens cannot be a root token. It has to be provided (provideFn needs to be invoked)\n  // for the 'multi' flag to work properly\n  if (opts.multi) {\n    opts.isRoot = false;\n  }\n  if (opts.isRoot) {\n    if (opts.token) {\n      throw new Error(`\\\ncreateInjectionToken is creating a root InjectionToken but an external token is passed in.\n`);\n    }\n    const token = new InjectionToken(`Token for ${tokenName}`, {\n      factory: () => {\n        if (opts.deps && Array.isArray(opts.deps)) {\n          return factory(...opts.deps.map(dep => {\n            dep = Array.isArray(dep) ? dep.at(-1) : dep;\n            return inject(dep);\n          }));\n        }\n        return factory();\n      }\n    });\n    const injectFn = createInjectFn(token);\n    return [injectFn, createProvideFn(token, factory, opts), token, () => ({\n      provide: ENVIRONMENT_INITIALIZER,\n      useValue: () => injectFn(),\n      multi: true\n    })];\n  }\n  const token = opts.token || new InjectionToken(`Token for ${tokenName}`);\n  return [createInjectFn(token), createProvideFn(token, factory, opts), token, () => []];\n}\nfunction createNoopInjectionToken(description, options) {\n  const token = options?.token || new InjectionToken(description);\n  return [createInjectFn(token), createProvideFn(token, () => null, options || {}), token, () => []];\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { createInjectionToken, createNoopInjectionToken };\n", "import { runInInjectionContext, inject, DestroyRef } from '@angular/core';\nimport { assertInjector } from 'ngxtension/assert-injector';\nimport { ReplaySubject } from 'rxjs';\n\n/**\n * Injects the `DestroyRef` service and returns a `ReplaySubject` that emits\n * when the component is destroyed.\n *\n * @throws {Error} If no `DestroyRef` is found.\n * @returns {ReplaySubject<void>} A `ReplaySubject` that emits when the component is destroyed.\n *\n * @example\n * // In your component:\n * export class MyComponent {\n *   private destroy$ = injectDestroy();\n *\n *   getData() {\n *     return this.service.getData()\n *       .pipe(takeUntil(this.destroy$))\n *       .subscribe(data => { ... });\n *   }\n * }\n */\nconst injectDestroy = injector => {\n  injector = assertInjector(injectDestroy, injector);\n  return runInInjectionContext(injector, () => {\n    const destroyRef = inject(DestroyRef);\n    const subject$ = new ReplaySubject(1);\n    destroyRef.onDestroy(() => {\n      subject$.next();\n      subject$.complete();\n    });\n    Object.assign(subject$, {\n      onDestroy: destroyRef.onDestroy.bind(destroyRef)\n    });\n    return subject$;\n  });\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { injectDestroy };\n", "import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, NgZone, ElementRef, EventEmitter, Directive, Output } from '@angular/core';\nimport { createInjectionToken } from 'ngxtension/create-injection-token';\nimport { injectDestroy } from 'ngxtension/inject-destroy';\nimport { Subject, fromEvent, takeUntil, filter } from 'rxjs';\n\n/*\n * This function is used to detect clicks in the document.\n * It is used by the clickOutside directive.\n */\nconst [injectDocumentClick] = createInjectionToken(() => {\n  const click$ = new Subject();\n  const [ngZone, document] = [inject(NgZone), inject(DOCUMENT)];\n  ngZone.runOutsideAngular(() => {\n    fromEvent(document, 'click').subscribe(click$);\n  });\n  return click$;\n});\n/*\n * This directive is used to detect clicks outside the element.\n *\n * Example:\n * <div (clickOutside)=\"close()\"></div>\n *\n */\nclass ClickOutside {\n  constructor() {\n    this.ngZone = inject(NgZone);\n    this.elementRef = inject(ElementRef);\n    this.documentClick$ = injectDocumentClick();\n    this.destroy$ = injectDestroy();\n    /*\n     * This event is emitted when a click occurs outside the element.\n     */\n    this.clickOutside = new EventEmitter();\n  }\n  ngOnInit() {\n    this.documentClick$.pipe(takeUntil(this.destroy$), filter(event => !this.elementRef.nativeElement.contains(event.target))).subscribe(event => {\n      this.ngZone.run(() => this.clickOutside.emit(event));\n    });\n  }\n  static {\n    this.ɵfac = function ClickOutside_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ClickOutside)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: ClickOutside,\n      selectors: [[\"\", \"clickOutside\", \"\"]],\n      outputs: {\n        clickOutside: \"clickOutside\"\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ClickOutside, [{\n    type: Directive,\n    args: [{\n      selector: '[clickOutside]',\n      standalone: true\n    }]\n  }], null, {\n    clickOutside: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ClickOutside };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAS,eAAe,IAAI,UAAU,QAAQ;AAC5C,GAAC,YAAY,yBAAyB,EAAE;AACxC,QAAM,mBAAmB,YAAY,OAAO,QAAQ;AACpD,MAAI,CAAC,OAAQ,QAAO;AACpB,SAAO,sBAAsB,kBAAkB,MAAM;AACvD;;;ACJA,SAAS,eAAe,OAAO;AAC7B,SAAO,SAAU,KAGb,CAAC,GAAG;AAHS,iBACf;AAAA;AAAA,IAJJ,IAGmB,IAEZ,0BAFY,IAEZ;AAAA,MADH;AAAA;AAGA,eAAW,eAAe,MAAM,QAAQ;AACxC,WAAO,sBAAsB,UAAU,MAAM,OAAO,OAAO,aAAa,CAAC;AAAA,EAC3E;AACF;AACA,SAAS,gBAAgB,OAAO,SAAS,OAAO,CAAC,GAAG;AAClD,QAAM;AAAA,IACJ,OAAO,CAAC;AAAA,IACR,QAAQ;AAAA,IACR,iBAAiB,CAAC;AAAA,IAClB,iBAAiB,0BAA0B;AAAA,EAC7C,IAAI;AACJ,SAAO,CAAC,OAAO,kBAAkB,4BAA4B;AAC3D,QAAI;AACJ,QAAI,OAAO,UAAU,aAAa;AAEhC,YAAMA,WAAU,OAAO,UAAU,aAAa,kBAAkB,MAAM,QAAQ,QAAQ,MAAM;AAC5F,iBAAW;AAAA,QACT,SAAS;AAAA,QACT,YAAYA;AAAA,QACZ;AAAA,MACF;AAAA,IACF,OAAO;AACL,iBAAW;AAAA,QACT,SAAS;AAAA,QACT,YAAY;AAAA,QACZ;AAAA,QACA;AAAA,MACF;AAAA,IACF;AACA,WAAO,CAAC,gBAAgB,QAAQ;AAAA,EAClC;AACF;AAkBA,SAAS,qBAAqB,SAAS,SAAS;AAC9C,QAAM,YAAY,QAAQ,QAAQ,QAAQ,SAAS;AACnD,QAAM,OAAO,WAAW;AAAA,IACtB,QAAQ;AAAA,EACV;AACA,OAAK,WAAW;AAGhB,MAAI,KAAK,OAAO;AACd,SAAK,SAAS;AAAA,EAChB;AACA,MAAI,KAAK,QAAQ;AACf,QAAI,KAAK,OAAO;AACd,YAAM,IAAI,MAAM;AAAA,CAErB;AAAA,IACG;AACA,UAAMC,SAAQ,IAAI,eAAe,aAAa,SAAS,IAAI;AAAA,MACzD,SAAS,MAAM;AACb,YAAI,KAAK,QAAQ,MAAM,QAAQ,KAAK,IAAI,GAAG;AACzC,iBAAO,QAAQ,GAAG,KAAK,KAAK,IAAI,SAAO;AACrC,kBAAM,MAAM,QAAQ,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI;AACxC,mBAAO,OAAO,GAAG;AAAA,UACnB,CAAC,CAAC;AAAA,QACJ;AACA,eAAO,QAAQ;AAAA,MACjB;AAAA,IACF,CAAC;AACD,UAAM,WAAW,eAAeA,MAAK;AACrC,WAAO,CAAC,UAAU,gBAAgBA,QAAO,SAAS,IAAI,GAAGA,QAAO,OAAO;AAAA,MACrE,SAAS;AAAA,MACT,UAAU,MAAM,SAAS;AAAA,MACzB,OAAO;AAAA,IACT,EAAE;AAAA,EACJ;AACA,QAAM,QAAQ,KAAK,SAAS,IAAI,eAAe,aAAa,SAAS,EAAE;AACvE,SAAO,CAAC,eAAe,KAAK,GAAG,gBAAgB,OAAO,SAAS,IAAI,GAAG,OAAO,MAAM,CAAC,CAAC;AACvF;;;AC3FA,kBAA8B;AAqB9B,IAAM,gBAAgB,cAAY;AAChC,aAAW,eAAe,eAAe,QAAQ;AACjD,SAAO,sBAAsB,UAAU,MAAM;AAC3C,UAAM,aAAa,OAAO,UAAU;AACpC,UAAM,WAAW,IAAI,0BAAc,CAAC;AACpC,eAAW,UAAU,MAAM;AACzB,eAAS,KAAK;AACd,eAAS,SAAS;AAAA,IACpB,CAAC;AACD,WAAO,OAAO,UAAU;AAAA,MACtB,WAAW,WAAW,UAAU,KAAK,UAAU;AAAA,IACjD,CAAC;AACD,WAAO;AAAA,EACT,CAAC;AACH;;;AChCA,IAAAC,eAAsD;AAMtD,IAAM,CAAC,mBAAmB,IAAI,qBAAqB,MAAM;AACvD,QAAM,SAAS,IAAI,qBAAQ;AAC3B,QAAM,CAAC,QAAQ,QAAQ,IAAI,CAAC,OAAO,MAAM,GAAG,OAAO,QAAQ,CAAC;AAC5D,SAAO,kBAAkB,MAAM;AAC7B,gCAAU,UAAU,OAAO,EAAE,UAAU,MAAM;AAAA,EAC/C,CAAC;AACD,SAAO;AACT,CAAC;AAQD,IAAM,gBAAN,MAAM,cAAa;AAAA,EACjB,cAAc;AACZ,SAAK,SAAS,OAAO,MAAM;AAC3B,SAAK,aAAa,OAAO,UAAU;AACnC,SAAK,iBAAiB,oBAAoB;AAC1C,SAAK,WAAW,cAAc;AAI9B,SAAK,eAAe,IAAI,aAAa;AAAA,EACvC;AAAA,EACA,WAAW;AACT,SAAK,eAAe,SAAK,wBAAU,KAAK,QAAQ,OAAG,qBAAO,WAAS,CAAC,KAAK,WAAW,cAAc,SAAS,MAAM,MAAM,CAAC,CAAC,EAAE,UAAU,WAAS;AAC5I,WAAK,OAAO,IAAI,MAAM,KAAK,aAAa,KAAK,KAAK,CAAC;AAAA,IACrD,CAAC;AAAA,EACH;AAgBF;AAdI,cAAK,OAAO,SAAS,qBAAqB,mBAAmB;AAC3D,SAAO,KAAK,qBAAqB,eAAc;AACjD;AAGA,cAAK,OAAyB,kBAAkB;AAAA,EAC9C,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,IAAI,gBAAgB,EAAE,CAAC;AAAA,EACpC,SAAS;AAAA,IACP,cAAc;AAAA,EAChB;AAAA,EACA,YAAY;AACd,CAAC;AA7BL,IAAM,eAAN;AAAA,CAgCC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,cAAc,CAAC;AAAA,IACrF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;",
  "names": ["factory", "token", "import_rxjs"]
}
